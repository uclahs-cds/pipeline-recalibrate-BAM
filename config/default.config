import nextflow.util.SysHelper

// Default inputs/parameters of the pipeline
params {
    min_cpus = 1
    min_memory = 1.MB

    max_cpus   = SysHelper.getAvailCpus()
    max_memory = SysHelper.getAvailMemory()

    ucla_cds = true

    cache_intermediate_pipeline_steps = false

    docker_container_registry = "ghcr.io/uclahs-cds"

    gatk_version = "4.2.4.1"
    pipeval_version = "4.0.0-rc.2"
    gatk3_version = "GATK-3.7.0"
    docker_image_gatk = "broadinstitute/gatk:${params.gatk_version}"
    docker_image_pipeval = "${-> params.docker_container_registry}/pipeval:${params.pipeval_version}"
    docker_image_gatk3 = "${-> params.docker_container_registry}/call-gsnp:${params.gatk3_version}"

    gatk_ir_compression = 1
}

// Process specific scope
process {
    // Process results are stored to local cache.
    // If pipeline is launched with the 'resume' option, existing cache results will be used when available
    // rather than re-executing processes
    cache = true

    // Forward process 'stdout' to shell terminal and, consequently, the log file
    executor = 'local'
    
    // Other directives or options that should apply for every process

    // total amount of resources avaible to the pipeline
    cpus = params.max_cpus
    memory = params.max_memory
}

// Enable Docker and configure docker-related options like user and group IDs
docker {
    enabled = true
    // Pass user's UID/GID and group IDs to Docker
    uid_and_gid = "-u \$(id -u):\$(id -g)"
    all_group_ids = "\$(for i in `id --real --groups`; do echo -n \"--group-add=\$i \"; done)"

    runOptions = "${uid_and_gid} ${all_group_ids}"
}
